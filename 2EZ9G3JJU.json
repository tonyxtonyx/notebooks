{"paragraph_1580872625746_1221957461":{"orderNumber":7,"id":"paragraph_1580872625746_1221957461","text":"%flink.bsql\n\nhelp","title":"All available sql in %flink.bsql"},"paragraph_1578905241045_-678553675":{"orderNumber":8,"id":"paragraph_1578905241045_-678553675","text":"%flink.bsql\n\nselect scala_upper(education), count(1) from bank group by education\n","title":"Use scala udf in sql"},"paragraph_1579053946947_-1754951794":{"orderNumber":0,"id":"paragraph_1579053946947_-1754951794","text":"%md\n\nThis tutorial demonstrates how to use Flink do data exploration analytics via its.\n\n* batch sql \n* udf (scala, python & hive) \n* Zeppelin's dynamic forms and builtin visualization\n\nWe use the bank data registered in another tutorial note. You can also use any existed hive table. \n","title":"Overview"},"paragraph_1578905208609_-1175158458":{"orderNumber":5,"id":"paragraph_1578905208609_-1175158458","text":"%flink\n\n\nclass ScalaUpper extends ScalarFunction {\n  def eval(str: String) = str.toUpperCase\n}\n\nbtenv.registerFunction(\"scala_upper\", new ScalaUpper())\n","title":"Scala UDF"},"paragraph_1578905276271_782994324":{"orderNumber":9,"id":"paragraph_1578905276271_782994324","text":"%flink.bsql\n\nselect python_upper(education) as edu, count(1) as c from bank group by education\n\n","title":"Use python udf in sql"},"paragraph_1580890230317_-355710383":{"orderNumber":10,"id":"paragraph_1580890230317_-355710383","text":"%flink.bsql\n","title":null},"paragraph_1627278504552_1564309602":{"orderNumber":1,"id":"paragraph_1627278504552_1564309602","text":"%sh\n\npip install apache-flink==1.12.2\n","title":"Install PyFlink"},"paragraph_1578905223714_1228156151":{"orderNumber":6,"id":"paragraph_1578905223714_1228156151","text":"%flink.pyflink\n\nclass PythonUpper(ScalarFunction):\n  def eval(self, s):\n    return s.upper()\n\nbt_env.register_function(\"python_upper\", udf(PythonUpper(), DataTypes.STRING(), DataTypes.STRING()))\n\n\n\n\n","title":"Python UDF"},"paragraph_1578043926895_1558885985":{"orderNumber":2,"id":"paragraph_1578043926895_1558885985","text":"%flink.bsql\n\nselect age, count(1) as aval\nfrom bank \nwhere age < 30 \ngroup by age \norder by age\n","title":"Common group by"},"paragraph_1578904010994_-1300955750":{"orderNumber":3,"id":"paragraph_1578904010994_-1300955750","text":"%flink.bsql\n\nselect age, count(1) as val \nfrom bank \nwhere age < ${maxAge=30} \ngroup by age \norder by age","title":"Textbox dynamic form"},"paragraph_1578904047823_-1212655985":{"orderNumber":4,"id":"paragraph_1578904047823_-1212655985","text":"%flink.bsql\n\nselect age, count(1) as val \nfrom bank \nwhere marital='${marital=single,single|divorced|married}' \ngroup by age \norder by age","title":"Select dynamic form"}}